version: '3.9'

services:
  BB-game-mongo1:
    image: mongo:8.0
    container_name: BB-game-mongo1
    ports:
      - "27018:27017"
    command: [ "mongod", "--replSet", "rs0" ]
    volumes:
      - BB-game-mongo1:/data/db
    networks:
      - bb-network
  BB-game-mongo2:
    image: mongo:8.0
    container_name: BB-game-mongo2
    command: [ "mongod", "--replSet", "rs0" ]
    volumes:
      - BB-game-mongo2:/data/db
    networks:
      - bb-network
  BB-game-mongo3:
    image: mongo:8.0
    container_name: BB-game-mongo3
    command: [ "mongod", "--replSet", "rs0" ]
    volumes:
      - BB-game-mongo3:/data/db
    networks:
      - bb-network
  mongo-exporter:
    image: bitnami/mongodb-exporter:0.43.0
    container_name: mongo-exporter
    restart: always
    command:
      - "--mongodb.uri=mongodb://BB-game-mongo1:27017"
      - "--discovering-mode"
      - "--collect-all"
    ports:
      - "9216:9216"
    depends_on:
      - BB-game-mongo1
      - BB-game-mongo2
      - BB-game-mongo3
    networks:
      - bb-network
  mongo-init:
    image: mongo:8.0
    container_name: mongo-init
    depends_on:
      - BB-game-mongo1
      - BB-game-mongo2
      - BB-game-mongo3
    networks:
      - bb-network
    command: >
      mongosh --host BB-game-mongo1 --eval '
      sleep(5000);
      rs.initiate({
        _id: "rs0",
        members: [
          { _id: 0, host: "BB-game-mongo1:27017" },
          { _id: 1, host: "BB-game-mongo2:27017" },
          { _id: 2, host: "BB-game-mongo3:27017" }
        ]
      })'
  game-service:
    build:
      context: ./../../..
      dockerfile: deploy/game/development/Dockerfile
      args:
        GO_IMAGE_NAME: golang
        GO_IMAGE_VERSION: 1.23
    container_name: game-service
    depends_on:
      - BB-game-mongo1
      - BB-game-mongo2
      - BB-game-mongo3
    networks:
      - bb-network
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://BB-game-mongo1:27017,BB-game-mongo2:27017,BB-game-mongo3:27017/bb-game?replicaSet=rs0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.game.rule=Host(`localhost`) && PathPrefix(`/game-service`)"
      - "traefik.http.middlewares.game-stripprefix.stripprefix.prefixes=/game-service"
      - "traefik.http.routers.game.middlewares=game-stripprefix,auth"
      - "traefik.http.services.game.loadbalancer.server.port=5003"
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth-service:5000/api/v1/validate-token"
      - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=Authorization, X-User-Role, X-User-ID, X-Auth-Data"

networks:
  bb-network:
    external: true

volumes:
  BB-game-mongo1:
  BB-game-mongo2:
  BB-game-mongo3:
